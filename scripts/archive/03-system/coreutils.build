#! /bin/bash
# syntax *.build <package.tar.xz> <number of make jobs>

# Load pkg build system configuration
source /tools/etc/00-pkgsystem.config &&

# Extract package info
export PACKAGE=$(echo "$1" | cut -d "." -f -2 ) &&
export PACKAGENAME=$(echo "$1" | cut -d "." -f -3 | cut -d "-" -f -1 ) &&
export PVER=$(echo "$1" | cut -d "." -f -2 | cut -d "-" -f 2 ) &&
cd $PACKAGE &&
mkdir -pv ${BSTAGE}/${PACKAGE}/{install,bin} &&
mkdir -pv ${BSTAGE}/${PACKAGE}/usr/sbin &&
mkdir -pv ${BSTAGE}/${PACKAGE}/usr/share/man/man8 &&
cp -v ${SRCDIR}/descs/${PACKAGENAME} ${BSTAGE}/${PACKAGE}/install/slack-desc &&
##### Configure package #########################################################
patch -Np1 -i ../patches/coreutils-8.31-fix-strtod.patch &&
autoreconf -vfi &&
sed -i '/test.lock/s/^/#/' gnulib-tests/gnulib.mk &&
FORCE_UNSAFE_CONFIGURE=1 ./configure \
            --prefix=/usr            \
            --enable-no-install-program=kill,uptime \
            --build=${HSTTRPL} &&
            
##### Compile it ################################################################
read -p "Compile?" && FORCE_UNSAFE_CONFIGURE=1 make ${MJ} &&

##### Fake install it ###########################################################
read -p "Psudo-Install?" && 
make DESTDIR=${BSTAGE}/${PACKAGE} install &&
cd ${BSTAGE}/${PACKAGE} &&
/tools/bin/mv -v usr/bin/{cat,chgrp,chmod,chown,cp,date,dd,df,echo} bin &&
/tools/bin/mv -v usr/bin/{false,ln,ls,mkdir,mknod,mv,pwd,rm} bin &&
/tools/bin/mv -v usr/bin/{rmdir,stty,sync,true,uname} bin &&
/tools/bin/mv -v usr/bin/chroot usr/sbin &&
/tools/bin/mv -v usr/share/man/man1/chroot.1 usr/share/man/man8/chroot.8 &&
sed -i s/\"1\"/\"8\"/1 usr/share/man/man8/chroot.8 &&
/tools/bin/mv -v usr/bin/{head,sleep,nice} bin &&

##################################################################################
cd ${BSTAGE}/${PACKAGE} &&
read -p "Remove SRC build?" && rm -rf ${SRCDIR}/${PACKAGE} &&

##### Build package
read -p "Generate package?" &&
/sbin/makepkg -l y -c n ${PSTAGE}/${PACKAGE}-x86_64-musl-mlfs.txz && 
cd /sources &&
read -p "Remove PKG Build?" && rm -rf ${BSTAGE}/${PACKAGE}
