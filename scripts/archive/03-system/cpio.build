#! /bin/bash
# syntax *.build <package.tar.xz> <number of make jobs>

# Load pkg build system configuration
source /tools/etc/00-pkgsystem.config &&

# Extract package info
export PACKAGE=$(echo "$1" | cut -d "." -f -2 ) &&
export PACKAGENAME=$(echo "$1" | cut -d "." -f -3 | cut -d "-" -f -1 ) &&
export PVER=$(echo "$1" | cut -d "." -f -2 | cut -d "-" -f 2 ) &&
cd $PACKAGE &&
mkdir -pv ${BSTAGE}/${PACKAGE}/install &&
cp -v ${SRCDIR}/descs/${PACKAGENAME} ${BSTAGE}/${PACKAGE}/install/slack-desc &&
##### Configure package #########################################################
patch -Np0 -i ../patches/cpio-2.12-void/0001-Fix-out-of-bounds-read.patch &&
patch -Np0 -i ../patches/cpio-2.12-void/0002-Fix-signed-integer-overflow-big-block-sizes.patch &&
patch -Np0 -i ../patches/cpio-2.12-void/0003-CVE-2016-2037-1-byte-out-of-bounds-write.patch &&
patch -Np0 -i ../patches/cpio-2.12-void/0004-Fix-sigfault-when-appending-to-archive.patch &&
autoreconf -ifv &&
./configure --prefix=/usr \
            --bindir=/bin \
            --enable-mt   \
            --with-rmt=/usr/libexec/rmt \
            --build=${HSTTRPL} &&

##### Compile it ################################################################
read -p "Compile?" && make ${MJ} &&

##### Fake install it ###########################################################
read -p "Psudo-Install?" && 
make DESTDIR=${BSTAGE}/${PACKAGE} install &&

##################################################################################
cd ${BSTAGE}/${PACKAGE} &&
read -p "Remove SRC build?" && rm -rf ${SRCDIR}/${PACKAGE} &&

##### Build package
read -p "Generate package?" &&
/sbin/makepkg -l y -c n ${PSTAGE}/${PACKAGE}-x86_64-musl-mlfs.txz &&
cd /sources &&
read -p "Remove PKG Build?" && rm -rf ${BSTAGE}/${PACKAGE}
