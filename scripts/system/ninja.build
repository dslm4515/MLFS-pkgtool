#! /bin/bash
# syntax *.build <package.tar.xz> <number of make jobs>

# Load pkg build system configuration
source /tools/etc/00-pkgsystem.config &&

# Extract package info
export PACKAGE=$(echo "$1" | sed -n '/\.tar\.gz$/s///p' ) &&
export PACKAGENAME=$(echo ${PACKAGE} | cut -d "-" -f 1 ) &&
export PVER=$(echo ${PACKAGE} | cut -d "-" -f 2 ) &&

cd $PACKAGE &&
mkdir -pv ${BSTAGE}/${PACKAGE}/install &&
cp -v ${SRCDIR}/descs/${PACKAGENAME} ${BSTAGE}/${PACKAGE}/install/slack-desc &&
##### Configure package #########################################################
sed -i '/int Guess/a \
  int   j = 0;\
  char* jobs = getenv( "NINJAJOBS" );\
  if ( jobs != NULL ) j = atoi( jobs );\
  if ( j > 0 ) return j;\
' src/ninja.cc &&
patch -Np1 -i ../patches/ninja-1.9.0-void-fix-musl.patch &&
python3 configure.py --bootstrap &&
##### Fake install it ###########################################################
read -p "Psudo-Install?" && 
install -vDm755 ninja ${BSTAGE}/${PACKAGE}/usr/bin/ninja &&
install -vDm644 misc/bash-completion ${BSTAGE}/${PACKAGE}/usr/share/bash-completion/completions/ninja &&
install -vDm644 misc/zsh-completion ${BSTAGE}/${PACKAGE}/usr/share/zsh/site-functions/_ninja &&
##################################################################################
cd ${BSTAGE}/${PACKAGE} &&
read -p "Remove SRC build?" && rm -rf ${SRCDIR}/${PACKAGE} &&

##### Build package
read -p "Generate package?" &&
makepkg -l y -c n ${PSTAGE}/${PACKAGE}-${PKG_SUFFIX} &&
cd /sources &&
read -p "Remove PKG Build?" && rm -rf ${BSTAGE}/${PACKAGE} &&
read -p "install?" && installpkg ${PSTAGE}/${PACKAGE}-${PKG_SUFFIX}
