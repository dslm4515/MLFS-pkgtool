#! /bin/bash

# Python 3 
# v7.00
# Run in chroot
#
# syntax *.build <package.tar.xz> <number of make jobs>
# $BUILD  = Directory to temporarily install
# $PKGS   = Directory to store built packages
# $MJ     = number of make jobs like -j3 for 3
# $SUFFIX = package file extenstion, i.e. i686-mlfs.txz 
# $DESCS  = Directory of package descriptions

# Load pkg build system configuration                          ##
source /sources/scripts/0-build.config                         &&
# Extract package info                                         ##
export PACKAGE=$(echo "$1" | cut -d "." -f -3 )                &&
export PACKAGENAME="python3"                                   &&
export PVER=$(echo "$1" | cut -d "." -f -3 | cut -d "-" -f 2 ) &&
cd $PACKAGE                                                    &&
#################################################################
patch -Np0 -i ../patches/python3-void/musl-find_library.patch                      &&
patch -Np0 -i ../patches/python3-void/tweak-MULTIARCH-for-powerpc-linux-musl.patch &&
rm -r Modules/expat                     &&
rm -r Modules/_ctypes/{darwin,libffi}*  &&
./configure --prefix=/usr        \
            --enable-shared      \
            --with-system-expat  \
            --with-system-ffi    \
            --with-ensurepip=yes \
            --enable-ipv6        \
            --with-threads       \
            --enable-loadable-sqlite-extensions \
            --with-computed-gotos &&
make $MJ && make DESTDIR=${BUILD} install       &&
chmod -v 755 ${BUILD}/usr/lib/libpython3.8.so   &&
chmod -v 755 ${BUILD}/usr/lib/libpython3.so     &&
#strip
find ${BUILD} | xargs file | grep -e "executable" -e "shared object" \
	  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null &&

cd ${BUILD} && mkdir -v ${BUILD}/install   &&
cp -v ${DESCS}/${PACKAGENAME} install/slack-desc  &&
makepkg -l y -c n ${PKGS}/${PACKAGENAME}-${PVER}-${SUFFIX}  &&
installpkg        ${PKGS}/${PACKAGENAME}-${PVER}-${SUFFIX}  &&
cd - && cd ..                                                   &&
printf  "${BLUEC}*** Removing unpacked package source.${NORMALC}\n" && 
rm -rf $PACKAGE &&
printf "${GREENC}*** Cleaning stage.${NORMALC}${NORMALC}\n"         && 
rm -rf ${BUILD}/*

