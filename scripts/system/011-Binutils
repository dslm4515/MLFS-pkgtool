#! /bin/bash

# Binutils 
# v7.00
# Run in chroot
#
# syntax *.build <package.tar.xz> <number of make jobs>
# $BUILD  = Directory to temporarily install
# $PKGS   = Directory to store built packages
# $MJ     = number of make jobs like -j3 for 3
# $SUFFIX = package file extenstion, i.e. i686-mlfs.txz 
# $DESCS  = Directory of package descriptions

# Load pkg build system configuration                          ##
source /sources/scripts/0-build.config                         &&
# Extract package info                                         ##
export PACKAGE=$(echo "$1" | cut -d "." -f -2 )                &&
export PACKAGENAME=$(echo "$1" | cut -d "." -f -3 | cut -d "-" -f -1 ) &&
export PVER=$(echo "$1" | cut -d "." -f -2 | cut -d "-" -f 2 ) &&
cd $PACKAGE                                                    &&
#################################################################

mkdir -v build && cd build &&
case $(uname -m) in
	x86_64)  export EXTRA_CONFIG=" --enable-targets=x86_64-pep"
		;;
	i686)    export EXTRA_CONFIG=" --enable-64-bit-bfd --enable-targets=x86_64-linux-gnu,x86_64-pep"
		;;
esac  &&
../configure --prefix=/usr       \
             --enable-gold       \
             --enable-ld=default \
             --enable-plugins    \
             --enable-shared     \
             --disable-werror    \
             --with-system-zlib  \
             --enable-relro \
             --enable-lto \
             --disable-nls \
             --enable-deterministic-archives \
             --enable-threads \
             --disable-compressed-debug-sections \
             --with-mmap $EXTRA_CONFIG              &&
make tooldir=/usr $MJ                               &&
cp -a libiberty libiberty-pic                       &&
make -C libiberty-pic clean ${MJ}                   &&
make CFLAGS="$CFLAGS -fPIC" -C libiberty-pic ${MJ}  &&
cp -a bfd bfd-pic                                   &&
make -C bfd-pic clean ${MJ}                         &&
make CFLAGS="$CFLAGS -fPIC -fvisibility=hidden" -C bfd-pic ${MJ}  &&
cp -a opcodes opcodes-pic                           &&
make -C opcodes-pic clean ${MJ}                     &&
make CFLAGS="$CFLAGS -fPIC" -C opcodes-pic ${MJ}    &&
make DESTDIR=${BUILD} tooldir=/usr  install         &&
mkdir -pv ${BUILD}/usr/lib &&
install -v -m 644 libiberty-pic/libiberty.a ${BUILD}/usr/lib &&
install -v -m 644 bfd-pic/libbfd.a          ${BUILD}/usr/lib &&
install -v -m 644 opcodes-pic/libopcodes.a  ${BUILD}/usr/lib &&
cd ..    &&
mkdir -pv ${BUILD}/usr/include                      &&
install -v -m 644 include/libiberty.h ${BUILD}/usr/include &&
install -v -m 644 include/demangle.h  ${BUILD}/usr/include &&

cd ${BUILD} && mkdir -v ${BUILD}/install   &&
cp -v ${DESCS}/${PACKAGENAME} install/slack-desc  &&
rm -vf usr/bin/ld                   &&
ln -sfrv /usr/bin/ld.bfd usr/bin/ld &&
printf "${YELLOWC}Remove these symlinks, they are not ABI stable.\n"      &&
rm -fv usr/lib/lib{bfd,opcodes}.so  &&
echo "INPUT ( /usr/lib/libbfd.a -liberty -lz )"  > usr/lib/libbfd.so      &&
echo "INPUT ( /usr/lib/libopcodes.a -lbfd )"     > usr/lib/libopcodes.so  &&
for f in dlltool nlmconv windres windmc; do
	rm -fv usr/share/man/man1/${f}.1
done && printf "${NORMALC}"                      &&
makepkg -l y -c n ${PKGS}/${PACKAGENAME}-${PVER}-${SUFFIX}  &&
installpkg        ${PKGS}/${PACKAGENAME}-${PVER}-${SUFFIX}  &&
cd - && cd ..                                                   &&
printf  "${BLUEC}*** Removing unpacked package source.${NORMALC}\n" && 
rm -rf $PACKAGE &&
printf "${GREENC}*** Cleaning stage.${NORMALC}${NORMALC}\n"         && 
rm -rf ${BUILD}/*

