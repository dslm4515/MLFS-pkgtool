#! /bin/bash
# syntax *.build <package.tar.xz> <number of make jobs>

# Load pkg build system configuration
source /tools/etc/00-pkgsystem.config &&

# Extract package info
export PACKAGE=$(echo "$1" | sed -n '/\.tar\.xz$/s///p' ) &&
export PACKAGENAME=$(echo ${PACKAGE} | cut -d "-" -f 1 ) &&
export PVER=$(echo ${PACKAGE} | cut -d "-" -f 2 ) &&
cd $PACKAGE &&
mkdir -pv ${BSTAGE}/${PACKAGE}/install &&
cp -v ${SRCDIR}/descs/${PACKAGENAME} ${BSTAGE}/${PACKAGE}/install/slack-desc &&
##### Configure package #########################################################
tar -xf ../isl-0.19.tar.xz &&
mv -v isl-0.19 isl &&
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/0010-ldbl128-config.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/ada-shared.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/fix-cxxflags-passing.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/fix-musl-execinfo.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/libgcc-musl-ldbl128-config.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/musl-ada.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/no-stack_chk_fail_local.patch
patch -Np0 -i ../patches/gcc-9.1.0-void-patches/non-nullness.patch
case $(uname -m) in
  x86_64*)
          sed -e '/m64=/s/lib64/lib/' \
              -i.orig gcc/config/i386/t-linux64
          ;;
  aarch64*)
	  export EXTRA_CONFIG=" --with-arch=armv8-a"
	  ;;
esac &&
sed -e '/m64=/s/lib64/lib/' -i.orig gcc/config/aarch64/t-aarch64-linux

sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" {gcc,libiberty}/configure &&
mkdir -v build && cd build &&
SED=sed  libat_cv_have_ifunc=no       \
../configure --prefix=/usr            \
             --with-system-zlib       \
             --with-isl \
             --with-linker-hash-style=gnu \
             --enable-languages=c,c++ \
             --enable-threads=posix \
             --enable-clocale=generic \
             --enable-languages=c,c++ \
             --enable-tls \
             --enable-libstdcxx-time \
             --enable-fully-dynamic-string \
             --enable-default-pie \
             --enable-default-ssp \
             --enable-vtable-verify \
             --enable-linker-build-id \
             --enable-fast-character \
             --disable-libstdcxx-pch \
             --disable-nls \
             --disable-multilib       \
             --disable-bootstrap      \
             --disable-symvers \
             --disable-libsanitizer \
             --disable-target-libiberty \
             --disable-libunwind-exceptions \
             --build=${HSTTRPL} $EXTRA_CONFIG &&

##### Compile it ################################################################
read -p "Compile?" && make ${MJ} &&

##### Fake install it ###########################################################
read -p "Psudo-Install?" && 
make DESTDIR=${BSTAGE}/${PACKAGE} install &&
cd ${BSTAGE}/${PACKAGE} &&
mkdir -pv lib && cd lib && ln -sv ../usr/bin/cpp cpp &&
cd ${BSTAGE}/${PACKAGE} &&
cd usr/bin && ln -sv gcc cc &&
cd ${BSTAGE}/${PACKAGE} &&

install -v -dm755 ${BSTAGE}/${PACKAGE}/usr/lib/bfd-plugins &&
ln -sfv ../../libexec/gcc/${HSTTRPL}/${PVER}/liblto_plugin.so \
        ${BSTAGE}/${PACKAGE}/usr/lib/bfd-plugins/ &&
mkdir -pv ${BSTAGE}/${PACKAGE}/usr/share/gdb/auto-load/usr/lib &&
mv -v  ${BSTAGE}/${PACKAGE}/usr/lib64/*  ${BSTAGE}/${PACKAGE}/usr/lib/ &&
rm -rf  ${BSTAGE}/${PACKAGE}/usr/lib64 &&
cd  ${BSTAGE}/${PACKAGE}/usr && ln -sv lib lib64 &&  ${BSTAGE}/${PACKAGE} &&
mv -v ${BSTAGE}/${PACKAGE}/usr/lib/*gdb.py ${BSTAGE}/${PACKAGE}/usr/share/gdb/auto-load/usr/lib &&

##################################################################################
cd ${BSTAGE}/${PACKAGE} &&
read -p "Remove SRC build?" && rm -rf ${SRCDIR}/${PACKAGE} &&

##### Build package
read -p "Generate package?" &&
makepkg -l y -c n ${PSTAGE}/${PACKAGE}-${PKG_SUFFIX} &&
cd /sources &&
read -p "Remove PKG Build?" && rm -rf ${BSTAGE}/${PACKAGE} &&
read -p "Install?" && installpkg  ${PSTAGE}/${PACKAGE}-${PKG_SUFFIX}
